@model YJK2237A5.Models.ActorAddFormViewModel

@{
    ViewBag.Title = "Add";
}

<h2>Create Actor</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group row mb-3">
        <div class="col-sm-2 text-end">
            <b>@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })</b>
        </div>
        <div class="col-sm-9">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row mb-3">
        <div class="col-sm-2 text-end">
            <b>
                @Html.LabelFor(model => model.AlternateName, htmlAttributes: new { @class = "control-label" })
            </b>
        </div>
        <div class="col-sm-9">
            @Html.EditorFor(model => model.AlternateName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AlternateName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row mb-3">
        <div class="col-sm-2 text-end">
            <b>
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label" })
            </b>
        </div>
        <div class="col-sm-9">
            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row mb-3">
        <div class="col-sm-2 text-end">
            <b>
                @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label" })
            </b>
        </div>
        <div class="col-sm-9">
            @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row mb-3">
        <div class="col-sm-2 text-end">
            <b>
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label" })
            </b>
        </div>
        <div class="col-sm-9">
            @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row mb-3">
        <div class="col-sm-2 text-end">
            <b>
                @Html.LabelFor(model => model.Biography, htmlAttributes: new { @class = "control-label" })
            </b>
        </div>
        <div class="col-sm-9">
            <textarea name="biography"></textarea>
            @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row mb-3" style="display:none;">
        <div class="col-sm-2 text-end">
            <b>
                @Html.LabelFor(model => model.Executive, htmlAttributes: new { @class = "control-label" })
            </b>
        </div>
        <div class="col-sm-9">
            @Html.EditorFor(model => model.Executive, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Executive, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-sm-9">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>

    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="//cdn.ckeditor.com/4.16.0/standard/ckeditor.js"></script>
    <script>CKEDITOR.replace('biography');</script>
}
